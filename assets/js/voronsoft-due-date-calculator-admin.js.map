{"version":3,"names":[],"mappings":"","sources":["voronsoft-due-date-calculator-admin.js"],"sourcesContent":["jQuery( function( $ ) {\r\n  \"use strict\";\r\n\r\n  /**\r\n   * All of the code for your admin-facing JavaScript source\r\n   * should reside in this file.\r\n   *\r\n   * Note: It has been assumed you will write jQuery code here, so the\r\n   * $ function reference has been prepared for usage within the scope\r\n   * of this function.\r\n   *\r\n   * This enables you to define handlers, for when the DOM is ready:\r\n   *\r\n   * $(function() {\r\n   *\r\n   * });\r\n   *\r\n   * When the window is loaded:\r\n   *\r\n   * $( window ).load(function() {\r\n   *\r\n   * });\r\n   *\r\n   * ...and/or other possibilities.\r\n   *\r\n   * Ideally, it is not considered best practise to attach more than a\r\n   * single DOM-ready or window-load handler for a particular page.\r\n   * Although scripts in the WordPress core, Plugins and Themes may be\r\n   * practising this, we should strive to set a better example in our own work.\r\n   */\r\n$( document ).ready( function() {\r\n  var optObj = [],\r\n  formLine = $( \"#vddc-settings-form tbody\" ),\r\n  result = $( \"#form__option_saved h2\" ),\r\n  error = $( \".error-wrap\" ),\r\n  resultWrapper = $( \"#form__option_saved\" ),\r\n  clone = $( \".form__line_clone\" ),\r\n  cloneField = $( clone ).find( \"input[type='text']\" ),\r\n  t = $( \"#productrow\" ).html(),\r\n  tr = $( t ),\r\n  arrayId = [],\r\n  btn = $( \"#form-button__clone\" );\r\n\r\n  function applyMCE( ) {\r\n    tinymce.PluginManager.load('imageuploader', flatpyramid_l10n.tiny_plugin);\r\n    tinyMCE.init({\r\n      mode : \"textareas\",\r\n      editor_selector : \"field_text_new\",\r\n      entity_encoding: \"raw\",\r\n      fix_list_elements : true,\r\n      element_format : 'html',\r\n      remove_linebreaks: false,\r\n      relative_urls : false,\r\n      forced_root_block : 'p',\r\n      plugins: [\r\n        \"wordpress lists image charmap hr \",\r\n        \"fullscreen\",\r\n        \"-imageuploader\",\r\n        \"media directionality\",\r\n        \"paste textcolor colorpicker hr\",\r\n        \"wpeditimage\"\r\n      ],\r\n      toolbar1: \"formatselect | bold italic  strikethrough  forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat | image | imageuploader\"\r\n    } );\r\n  }\r\n\r\n  function AddRemoveTinyMce( editorId ) {\r\n    if ( tinyMCE.get( editorId ) )  {\r\n      \r\n      tinyMCE.EditorManager.execCommand( \"mceFocus\", false, editorId );\r\n      tinyMCE.EditorManager.execCommand( \"mceRemoveEditor\", true, editorId );\r\n\r\n    } else {\r\n\r\n      tinymce.EditorManager.execCommand( \"mceAddEditor\", false, editorId );\r\n\r\n    }\r\n  }\r\n\r\n  applyMCE();\r\n\r\n  function addRow( ) {\r\n    var element = null;\r\n    for ( var i = 0; i < 1; i++ ) {\r\n        element = tr.clone();\r\n        var index = ( index ) ? index : formLine.find( \".type-row\" ).length;\r\n        var divId = \"id_\" + index;\r\n        element.attr( \"id\", divId );\r\n        element.find( \".minus\" ).attr( \"targetDiv\", divId );\r\n        element.find( \".field_text_new\" ).attr( \"id\", \"row_\" + divId );\r\n        element.appendTo( formLine );\r\n        AddRemoveTinyMce( \"row_\" + divId );\r\n    }\r\n  }\r\n\r\n  btn.on( \"click\", function( e ) {\r\n    e.preventDefault();\r\n    addRow();\r\n    applyMCE();\r\n  } );\r\n\r\n\r\n  $( window ).load( function( ) {\r\n    var updateHandler = $.ajax( {\r\n      type: \"POST\",\r\n      url: ajaxurl,\r\n      data: {\r\n        action: \"handle_request\",\r\n        vs_action: \"sendDb\"\r\n      },\r\n      success: function( response ) {\r\n        if ( response.data.var ) {\r\n          var d = response.data.var;\r\n          var bitch = d.map( function( a, index ) {\r\n            addRow();\r\n            $( \"#id_\" + index ).find( \".field_text_new\" ).val( a.Text );\r\n            $( \"#id_\" + index ).find( \".field_date\" ).val( a.Weeks );\r\n          } );\r\n      } else {\r\n        addRow();\r\n      }\r\n    },\r\n    complete: function() {\r\n      applyMCE();\r\n    }\r\n  } );\r\n} );\r\n\r\n  $( \"#vddc-settings-form\" ).on( \"click\", \".minus\", function( e, index ) {\r\n    e.preventDefault();\r\n    var didConfirm = confirm( \"Are you sure You want to delete this row?\" );\r\n    if ( didConfirm == true ) {\r\n      var id = $( this ).attr( \"data-id\" );\r\n      var targetDiv = $( this ).attr( \"targetDiv\" );\r\n      $( \"#\" + targetDiv ).remove();\r\n    return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  } );\r\n\r\n  //Save settings\r\n  $( \"#js-vddc-submit\" ).click( function( e ) {\r\n    e.preventDefault();\r\n    Validate();\r\n    optObj = [];\r\n    $( resultWrapper ).fadeOut();\r\n    $( result ).empty(); var row = {};\r\n    $( \".form__line_clone\" ).each( function() {\r\n      var date = $( this ).find( \".field_date\" ).val();\r\n      var togo = $( this ).find( \".field_text_new\" ).attr( \"id\" );\r\n      var tyVal = wp.editor.getContent( togo );\r\n      row = {\r\n        \"Weeks\": date,\r\n        \"Text\": tyVal\r\n      };\r\n      optObj.push( row );\r\n    } );\r\n    if ( $( \"input[type='text']\" ).hasClass( \"error\" ) || $( \"textarea\" ).hasClass( \"error\" ) ) {\r\n      $( \".error\" ).next( error ).text( \"Empty field\" );\r\n      return;\r\n    } else {\r\n      var optionHandler = $.ajax( {\r\n        type: \"POST\",\r\n        url: ajaxurl,\r\n        data: {\r\n          action: \"handle_request\",\r\n          vs_action: \"wpa_49691\",\r\n          option: optObj\r\n        },\r\n        success: function( response ) {\r\n          $( result ).append( response.data.message );\r\n        },\r\n        complete: function() {\r\n          $( resultWrapper ).fadeIn();\r\n        }\r\n      } );\r\n    }\r\n  } );\r\n\r\n//Validation fields\r\n\r\n  function Validate() {\r\n    $( \".form__field_validation\" ).each( function() {\r\n      if ( $( this ).val() === \"\" ) {\r\n\r\n        $( this ).addClass( \"error\" );\r\n        $( this ).next( error ).fadeIn();\r\n\r\n      } else {\r\n        $( this ).removeClass( \"error\" );\r\n        $( this ).next( error ).fadeOut();\r\n      }\r\n    } );\r\n  };\r\n} );\r\n} );"],"file":"voronsoft-due-date-calculator-admin.js"}